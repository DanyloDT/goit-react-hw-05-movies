{"version":3,"file":"static/js/695.ba82953e.chunk.js","mappings":"sNAQA,EANa,SAAAA,GACX,GAAIA,EACF,OAAOC,EAAAA,EAAAA,GAAO,IAAIC,KAAKF,GAAO,OAEjC,E,UCLD,EAA4B,6BAA5B,EAAyE,iCAAzE,EAAiH,wB,SCuCjH,MAnCA,YAA+B,IAIdG,EAJIC,EAAS,EAATA,MACXC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,OAAQC,EAChDL,EADgDK,aAAcC,EAC9DN,EAD8DM,SAOhE,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBACEC,IACER,EAAW,0CAAsCA,GAAgBS,EAEnEC,IAAKT,EACLU,MAAM,SAER,iBAAKL,UAAWC,EAAhB,WACE,0BACGN,EAAM,KAAGW,EAAKR,GAAc,QAE/B,8CAjBSN,EAiBiBI,EAhBvBW,OAAOC,SAAiB,IAAPhB,EAAc,KAgBlC,QACA,wBAAI,cACJ,uBAAIO,KACJ,wBAAI,YACJ,eAAIC,UAAWC,EAAf,SACGJ,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALD,EADC,WAOrB,E,gDCrCD,EAAsB,0BAAtB,EAA0D,8BAA1D,EAAgG,4BAAhG,EAAmI,2BAAnI,EAAqK,2BAArK,EAA2M,+B,UC+C3M,EAvCqB,WAAO,IAAD,EACjBE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgBE,EAAAA,EAAAA,GAAQC,EAAAA,GAAkB,KAAMH,GAAzCnB,GAAP,eACMuB,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,OAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,MAE5C,GAAK5B,EAEL,OACE,iCACE,mBAAQO,UAAWC,EAASqB,KAAK,SAAjC,UACE,UAAC,KAAD,CAAMtB,UAAWC,EAAasB,IAAe,OAAXL,QAAW,IAAXA,OAAA,EAAAA,EAAaM,UAAW,IAA1D,WACE,SAAC,MAAD,IAAuB,gBAI3B,SAAC,EAAD,CAAW/B,MAAOA,KAClB,4BACE,eAAIO,UAAWC,EAAf,SAA0B,4BAC1B,gBAAID,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAcsB,GAAG,OAAlC,SAAyC,YAI3C,eAAIvB,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAcsB,GAAG,UAAlC,SAA4C,qBAMlD,SAAC,EAAAE,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["servise/date.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDesc/MovieDesc.module.css?90e3","components/MovieDesc/MovieDesc.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { format } from 'date-fns';\n\nconst date = year => {\n  if (year) {\n    return format(new Date(year), 'yyyy');\n  }\n};\n\nexport default date;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDesc_container__J3yDQ\",\"containerInfo\":\"MovieDesc_containerInfo__K+rcq\",\"list\":\"MovieDesc_list__1pwtg\"};","import PropTypes from 'prop-types';\nimport date from 'servise/date';\nimport img from '../../images/defaultImg.png';\nimport css from './MovieDesc.module.css';\n\nfunction MovieDesc({ movie }) {\n  const { poster_path, title, vote_average, genres, release_date, overview } =\n    movie;\n\n  const rating = info => {\n    return Number.parseInt((info * 100) / 10);\n  };\n\n  return (\n    <div className={css.container}>\n      <img\n        src={\n          poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : img\n        }\n        alt={title}\n        width=\"300\"\n      />\n      <div className={css.containerInfo}>\n        <h1>\n          {title} ({date(release_date)})\n        </h1>\n        <p>{`User Score: ${rating(vote_average)}%`}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <ul className={css.list}>\n          {genres.map(({ id, name }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDesc;\n\nMovieDesc.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      }).isRequired\n    ).isRequired,\n    poster_path: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieDetails_btn__7L5IF\",\"btnLink\":\"MovieDetails_btnLink__OtEjx\",\"title\":\"MovieDetails_title__cUGs9\",\"list\":\"MovieDetails_list__dbNMP\",\"item\":\"MovieDetails_item__mbUY+\",\"itemLink\":\"MovieDetails_itemLink__kpXYW\"};","import { useHttp } from 'Hook/useHttp';\nimport MovieDesc from 'components/MovieDesc/MovieDesc';\nimport { Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMoviesDetails } from 'servise/themoviedb-api';\nimport { MdKeyboardBackspace } from 'react-icons/md';\nimport css from './MovieDetails.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie] = useHttp(getMoviesDetails, null, movieId);\n  const location = useLocation();\n  const locationRef = useRef(location?.state?.from);\n\n  if (!movie) return;\n\n  return (\n    <>\n      <button className={css.btn} type=\"button\">\n        <Link className={css.btnLink} to={locationRef?.current || '/'}>\n          <MdKeyboardBackspace />\n          Go back\n        </Link>\n      </button>\n      <MovieDesc movie={movie} />\n      <div>\n        <h3 className={css.title}>Additional information</h3>\n        <ul className={css.list}>\n          <li className={css.item}>\n            <Link className={css.itemLink} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li className={css.item}>\n            <Link className={css.itemLink} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["year","format","Date","info","movie","poster_path","title","vote_average","genres","release_date","overview","className","css","src","img","alt","width","date","Number","parseInt","map","id","name","movieId","useParams","useHttp","getMoviesDetails","location","useLocation","locationRef","useRef","state","from","type","to","current","Suspense","fallback","Loader"],"sourceRoot":""}